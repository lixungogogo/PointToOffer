#define _CRT_SECURE_NO_WARNINGS 1
#include <iostream>
#include <assert.h>
using namespace std;

/**************************************************
题目描述：写一个函数，输入n，求斐波那契数列的第n项。
		 斐波那契数列的定义为下：
		 f(n) = 0			 ,n = 0
			  = 1			 , n = 1
			  =f(n-1)+f(n-2) ,n > 1
题目思路：1.递归，代码简洁但是有很严重的效率问题
		 递归的时间复杂度是以n的指数的方式递增的
		 2.通过三个变量以及循环的方式
		 该方法的时间复杂度为O(n)
特殊测试：1.输入0
		 2.输入1
Fib应用：1.一直青蛙一次可以跳上一级台阶，也可以跳上2级。
		 求该青蛙跳上一个n级台阶总共有多少种跳法
		 2.我们可以用2*1的小矩形横着或者竖着去覆盖更大
		 的举行。请问用8个2*1的小矩形无重叠的覆盖一个
		 2*8的大矩形，总共有多少种方法
**************************************************/

long long Fib(int n)
{
	assert(n > 0);
	if (n < 2)
		return 1;
	long long num = 0, a = 1, b = 0;
	while (n--)
	{
		num = a + b;
		b = a;
		a = num;
	}
	return num;
}

int Test()
{
	int num = Fib(1);
	return 0;
}